<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jqassistant.contrib.common</groupId>
        <artifactId>parent</artifactId>
        <version>1.10.0</version>
        <relativePath/>
    </parent>

    <groupId>org.jqassistant.contrib.plugin</groupId>
    <artifactId>jqassistant-javagen-plugin</artifactId>
    <version>0.1-SNAPSHOT</version>

    <name>jQAssistant Generated Java Proof-of-Concept</name>
    <description>A generated jQAssistant plugin for Java as a PoC</description>
    <url>http://jqassistant.org/</url>

    <organization>
        <name>jQAssistant Development Team</name>
        <url>https://jqassistant.org</url>
    </organization>

    <developers>
        <developer>
            <id>kev007</id>
            <name>Kevin M. Shrestha</name>
            <email>kev_shrestha@hotmail.com</email>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>GNU General Public License, v3</name>
            <url>http://www.gnu.org/licenses/gpl-3.0.html</url>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git@github.com:jqassistant-contrib/jqassistant-scanner-framework.git</connection>
        <developerConnection>scm:git:git@github.com:jqassistant-contrib/jqassistant-scanner-framework.git</developerConnection>
        <url>https://github.com/jqassistant-contrib/jqassistant-scanner-framework</url>
        <tag>HEAD</tag>
    </scm>

    <prerequisites>
        <maven>3.0</maven>
    </prerequisites>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <antlr4.visitor>true</antlr4.visitor>
        <antlr4.listener>true</antlr4.listener>
        <asciidoctor.toplevelid>jqa-parser-generator</asciidoctor.toplevelid>

        <java.version>1.8</java.version>
        <lombok.version>1.18.22</lombok.version>
        <org.mapstruct.version>1.4.2.Final</org.mapstruct.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-plugin-api</artifactId>
            <version>3.8.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>4.9.3</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>java-hamcrest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- buschmais dependencies -->
        <dependency>
            <groupId>com.buschmais.jqassistant.plugin</groupId>
            <artifactId>common</artifactId>
        </dependency>
        <dependency>
            <groupId>com.buschmais.jqassistant.core</groupId>
            <artifactId>shared</artifactId>
        </dependency>
        <dependency>
            <groupId>com.buschmais.jqassistant.core</groupId>
            <artifactId>scanner</artifactId>
        </dependency>
        <dependency>
            <groupId>com.buschmais.jqassistant.core</groupId>
            <artifactId>report</artifactId>
        </dependency>
        <dependency>
            <groupId>com.buschmais.jqassistant.core</groupId>
            <artifactId>plugin</artifactId>
        </dependency>

        <dependency>
            <groupId>com.buschmais.jqassistant.plugin</groupId>
            <artifactId>common</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.buschmais.jqassistant.core</groupId>
            <artifactId>store</artifactId>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>com.buschmais.jqassistant.core</groupId>
            <artifactId>analysis</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.buschmais.xo</groupId>
            <artifactId>xo.neo4j.embedded</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.buschmais.jqassistant.neo4jserver</groupId>
            <artifactId>neo4jv3</artifactId>
            <scope>test</scope>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>com.github.javaparser</groupId>-->
<!--            <artifactId>javaparser-core</artifactId>-->
<!--            <version>3.23.1</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>com.github.javaparser</groupId>-->
<!--            <artifactId>javaparser-symbol-solver-core</artifactId>-->
<!--            <version>3.23.1</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.jqassistant.contrib.plugin</groupId>-->
<!--            <artifactId>jqassistant-javasrc-plugin</artifactId>-->
<!--            <version>0.0.9</version>-->
<!--            <scope>provided</scope>-->
<!--        </dependency>-->
    </dependencies>

    <build>
        <plugins>
            <!-- Plugin to compile the g4 files ahead of the java files
                 See https://github.com/antlr/antlr4/blob/master/antlr4-maven-plugin/src/site/apt/examples/simple.apt.vm
                 Except that the grammar does not need to contain the package declaration as stated in the documentation (I do not know why)
                 To use this plugin, type:
                   mvn antlr4:antlr4
                 In any case, Maven will invoke this plugin before the Java source is compiled
              -->
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>4.9</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.jqassistant.contrib.plugin</groupId>
                            <artifactId>antlr-parser-accessornaming-spi-impl</artifactId>
                            <version>1.0</version>
                            <!--
                             In real life, this should be a fixed version from a different
                            reactor project and not be part of the same multi-module project.
                             Maven wouldn't be able to consider that in the build-order calculation
                            and might pull in the spi-impl from a previous build (especially
                            tricky in multi-threaded builds).
                             For Eclipse, there would be similar problems, as it can't reference
                            build artifacts of workspace projects in the processor classpath but
                            only jar-files (in this case from the local M2-repo cache).
                            -->
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>sonatype-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <profiles>
        <profile>
            <id>skip</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <maven.test.skip>true</maven.test.skip>
                <maven.javadoc.skip>true</maven.javadoc.skip>
<!--                <jqassistant.skip>true</jqassistant.skip>-->
                <checkstyle.skip>true</checkstyle.skip>
            </properties>
        </profile>
    </profiles>

</project>
