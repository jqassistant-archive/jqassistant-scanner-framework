<jqassistant-rules xmlns="http://schema.jqassistant.org/rule/v1.10">
    <group id="java">
        <includeConcept refId="java:*"/>
    </group>

    <concept id="java:AllPackageChildren">
        <cypher><![CDATA[
            MATCH
                (cu:CompilationUnit)-[*..256]->(child)
            CALL apoc.path.spanningTree(cu, {labelFilter: '+CompilationUnit'})
            YIELD path
            MERGE
                (cu)-[:CHILD_OF_COMPILATIONUNIT]->(child)
            RETURN *
            ]]>
        </cypher>
    </concept>
    <concept id="debug:temp">
        <cypher><![CDATA[
            MATCH
                (x)-[childRelationship:CHILD_OF_COMPILATIONUNIT]->(y)
            DELETE childRelationship
            ]]>
        </cypher>
    </concept>

    <concept id="java:AllRelationships">
        <cypher><![CDATA[
            MATCH
                (:JavaGenAST)-[anyRelationship]->(:JavaGenAST)
            SET anyRelationship.type = "AST"
            RETURN *
            ]]>
        </cypher>
    </concept>

    <concept id="java:PackageDeclaration">
        <requiresConcept refId="java:AllPackageChildren"/>
        <cypher><![CDATA[
            MATCH
                (cu:CompilationUnit:JavaGenAST)-[:HAS_PACKAGE_DECLARATION]->
                ()-[:HAS_PACKAGE_NAME]->
                (packageName:PackageName:JavaGenAST)
            MERGE
                (package:Java:Language:Package {
                    fqn: packageName.sourceCode
                })
            MERGE
                (cu)-[x:MEMBER_OF]->(package)
            RETURN *
            ]]></cypher>
    </concept>

    <concept id="java:PackageImportDeclaration">
        <requiresConcept refId="java:PackageDeclaration"/>
        <cypher><![CDATA[
            MATCH
                (cu:CompilationUnit)-[:HAS_IMPORT_DECLARATION]->
                ()-[:HAS_TYPE_IMPORT_ON_DEMAND_DECLARATION]->
                ()-[:HAS_PACKAGE_OR_TYPE_NAME]->
                (packageOrTypeName:PackageOrTypeName)
            MERGE
                (package:Java:Language:Package {
                    fqn: packageOrTypeName.sourceCode
                })
            MERGE
                (cu)-[:IMPORTS]->(package)
            RETURN *
            ]]></cypher>
    </concept>

    <concept id="java:SingleImportDeclaration">
        <requiresConcept refId="java:PackageDeclaration"/>
        <cypher><![CDATA[
            MATCH
                (cu:CompilationUnit)-[:HAS_IMPORT_DECLARATION]->
                ()-[:HAS_SINGLE_TYPE_IMPORT_DECLARATION]->
                ()-[:HAS_TYPE_NAME]->
                (typeName:TypeName)-[:HAS_IDENTIFIER]->
                (identifier:TerminalNodeStrings)
            MATCH
                (typeName:TypeName)-[:HAS_PACKAGE_OR_TYPE_NAME]->
                (packageOrTypeName:PackageOrTypeName)
            MERGE
                (type:Java:Language:Type {
                    name: identifier.text,
                    fqn:  typeName.sourceCode
                })
            MERGE
                (package:Java:Language:Package {
                    fqn: packageOrTypeName.sourceCode
                })
            MERGE
                (cu)-[:IMPORTS]->(type)
            MERGE
                (type)-[:MEMBER_OF]->(package)
            RETURN *
            ]]>
        </cypher>
    </concept>


</jqassistant-rules>
